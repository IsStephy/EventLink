{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\Desktop\\\\ReactJS\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport './App.css';\n// import 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Event {\n  constructor(name, date, time, location) {\n    this.name = name;\n    this.date = date;\n    this.time = time;\n    this.location = location;\n  }\n}\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([new Event('Lecture', new Date(2024, 9, 4), '10:00', 'Aula 3-3'), new Event(`Programmer's Day`, new Date(2024, 9, 14), '17:00', 'Tekwill')]);\n  const [calendarEvents, setCalendarEvents] = useState({});\n  useEffect(() => {\n    // Group events by date\n    const eventsByDate = events.reduce((accumulation, event) => {\n      const dateKey = event.date.toDateString(); // Convert date to a string for the key\n      if (!accumulation[dateKey]) {\n        accumulation[dateKey] = [];\n      }\n      accumulation[dateKey].push(event); // Add event to the array for this date\n      return accumulation;\n    }, {});\n    setCalendarEvents(eventsByDate); // Update the state with the grouped events\n  }, [events]); // Re-run when `events` changes\n\n  // Function to render events for a given date\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const dateKey = date.toDateString();\n    const eventsForDate = calendarEvents[dateKey];\n    return view === 'month' && eventsForDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: eventsForDate.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [event.time, \" at \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+o4loymBvTPqy9XcNgn3f2ybtnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","Event","constructor","name","date","time","location","App","_s","events","setEvents","Date","calendarEvents","setCalendarEvents","eventsByDate","reduce","accumulation","event","dateKey","toDateString","push","tileContent","view","eventsForDate","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/maria/Desktop/ReactJS/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport './App.css';\n// import 'react-calendar/dist/Calendar.css';\n\nclass Event {\n  constructor(name, date, time, location) {\n    this.name = name;\n    this.date = date;\n    this.time = time;\n    this.location = location;\n  }\n}\n\nfunction App() {\n  const [events, setEvents] = useState([\n    new Event('Lecture', new Date(2024, 9, 4), '10:00', 'Aula 3-3'),\n    new Event(`Programmer's Day`, new Date(2024, 9, 14), '17:00', 'Tekwill')\n  ]);\n\n  const [calendarEvents, setCalendarEvents] = useState({});\n\n  useEffect(() => {\n    // Group events by date\n    const eventsByDate = events.reduce((accumulation, event) => {\n      const dateKey = event.date.toDateString(); // Convert date to a string for the key\n      if (!accumulation[dateKey]) {\n        accumulation[dateKey] = [];\n      }\n      accumulation[dateKey].push(event); // Add event to the array for this date\n      return accumulation;\n    }, {});\n\n    setCalendarEvents(eventsByDate); // Update the state with the grouped events\n  }, [events]); // Re-run when `events` changes\n\n  // Function to render events for a given date\n  const tileContent = ({ date, view }) => {\n    const dateKey = date.toDateString();\n    const eventsForDate = calendarEvents[dateKey];\n\n    return view === 'month' && eventsForDate ? (\n      <div>\n        {eventsForDate.map((event, index) => (\n          <div key={index}>\n            <strong>{event.name}</strong>\n            <p>{event.time} at {event.location}</p>\n          </div>\n        ))}\n      </div>\n    ) : null;\n  };\n\n  return (\n    <div>\n      <h1>My Calendar</h1>\n      <Calendar tileContent={tileContent} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}